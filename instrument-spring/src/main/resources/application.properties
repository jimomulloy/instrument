quarkus.http.port=8080
quarkus.http.ssl-port=8443
#quarkus.resteasy.path=instrument
quarkus.log.console.async=true
quarkus.log.console.async.queue-length=1024
quarkus.log.console.format= %d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.level=WARN
%dev.quarkus.log.console.json=false
#quarkus.log.category."jomu.instrument.audio.AudioTuner".level=DEBUG

quarkus.native.add-all-charsets=true

quarkus.http.cors=true
quarkus.http.cors.methods=GET,POST

quarkus.smallrye-openapi.path=/docs/openapi

# Security using Quarkus built-in policy controls

quarkus.smallrye-health.ui.enable=true;

management.endpoints.web.exposure.include=prometheus
management.endpoint.health.show-details=always
management.metrics.tags.application= MonitoringInstrumentSpringProject

storage.directory=/.instrument/store

quarkus.container-image.group=commonline
quarkus.container-image.name=instrument-ws
quarkus.kubernetes.name=instrument-ws
quarkus.kubernetes.namespace=commonline
quarkus.container-image.tag=1.0

# Health Probe configuration

quarkus.kubernetes.liveness-probe.initial-delay=10
quarkus.kubernetes.liveness-probe.period=2
quarkus.kubernetes.liveness-probe.timeout=5

quarkus.kubernetes.readiness-probe.initial-delay=10
quarkus.kubernetes.readiness-probe.period=2
quarkus.kubernetes.readiness-probe.timeout=5


#spring
#server.port=8888
one.microstream.storage-directory=/.instrument/store
one.microstream.channel-count=2
#one.microstream.auto-start=true
#one.microstream.config=microstream.properties
#
#management.endpoints.enabled-by-default=true
#management.endpoint.info.enabled=true
#management.endpoints.web.exposure.include=metrics,prometheus
#management.datadog.metrics.export.apiKey=*****
